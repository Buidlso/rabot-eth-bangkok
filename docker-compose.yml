version: '3.8'

services:
  # Applications
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    container_name: app
    profiles:
      - dev
      - prod
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '${APP_HTTP_PORT:-}:8080'
    volumes:
      - .:/usr/src/app
    networks:
      - app_net
      - redis_net

  # Infrastructure
  redis:
    image: redis
    container_name: redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - redis_net
    volumes:
      - redis_vol:/data

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app_net

volumes:
  redis_vol:
    name: redis_vol

networks:
  app_net:
    name: app_net
  redis_net:
    name: redis_net
    driver: bridge
